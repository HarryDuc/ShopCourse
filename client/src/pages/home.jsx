import React from "react";
import { useState } from "react";
import { Card, CardContent } from "@/components/ui/card";
import { Button } from "@/components/ui/button";

const LearningUI = () => {
    const images = {
        training: "/img/1.jpg",
        certification: "/img/2.jpg",
        analytics: "/img/3.jpg",
        customContent: "/img/4.jpg",
    };
    const testimonials = [
        {
            quote: "Udemy ƒë∆∞·ª£c ƒë√°nh gi√° l√† ch∆∞∆°ng tr√¨nh c·∫•p ch·ª©ng ch·ªâ ho·∫∑c kh√≥a h·ªçc online ph·ªï bi·∫øn nh·∫•t...",
            author: "Stack Overflow",
            details: "Thu th·∫≠p ƒë∆∞·ª£c 37.076 ph·∫£n h·ªìi",
            link: "Xem c√°c kh√≥a h·ªçc Ph√°t tri·ªÉn web ‚Üí",
            logo: "https://upload.wikimedia.org/wikipedia/commons/e/ef/Stack_Overflow_icon.svg", // Thay b·∫±ng logo ph√π h·ª£p
        },
        {
            quote: "Udemy th·ª±c s·ª± l√† y·∫øu t·ªë mang t√≠nh ƒë·ªôt ph√° v√† l√† n·ªÅn t·∫£ng d·∫°y h·ªçc tuy·ªát v·ªùi...",
            author: "Alvin Lim",
            details: "ƒê·ªìng s√°ng l·∫≠p k·ªπ thu·∫≠t, CTO t·∫°i Dimensional",
            link: "Xem kh√≥a h·ªçc iOS & Swift n√†y ‚Üí",
            image: "https://randomuser.me/api/portraits/men/1.jpg",
        },
        {
            quote: "Udemy cho b·∫°n kh·∫£ nƒÉng ki√™n tr√¨. T√¥i ƒë√£ h·ªçc ƒë∆∞·ª£c ch√≠nh x√°c nh·ªØng g√¨ t√¥i c·∫ßn...",
            author: "William A. Wachlin",
            details: "Chuy√™n vi√™n qu·∫£n l√Ω ƒë·ªëi t√°c t·∫°i Amazon Web Services",
            link: "Xem kh√≥a h·ªçc AWS n√†y ‚Üí",
            image: "https://randomuser.me/api/portraits/men/2.jpg",
        },
        {
            quote: "V·ªõi Udemy Business, c√°c nh√¢n vi√™n ƒë√£ c√≥ th·ªÉ k·∫øt h·ª£p c√°c k·ªπ nƒÉng m·ªÅm v√† t∆∞ v·∫•n...",
            author: "Ian Stevens",
            details: "Head of Capability Development, North America t·∫°i Publicis Sapient",
            link: "ƒê·ªçc to√†n b·ªô c√¢u chuy·ªán ‚Üí",
            image: "https://randomuser.me/api/portraits/men/3.jpg",
        },
    ];


    const [selectedCard, setSelectedCard] = useState("training");
    return (
        <div className="p-8 space-y-12 bg-white dark:bg-gray-900 text-gray-900 dark:text-gray-100 transition-colors duration-300">
            {/* Section 1: Learning Program */}
            <section className="max-w-7xl mx-auto px-6 md:px-12 grid md:grid-cols-2 gap-12">
                <div>
                    <h2 className="text-2xl font-bold">Ch∆∞∆°ng tr√¨nh h·ªçc t·∫≠p h∆∞·ªõng t·ªõi m·ª•c ti√™u c·ªßa b·∫°n</h2>

                    {/** üü£ Card 1 - ƒê√†o t·∫°o th·ª±c h√†nh */}
                    <Card
                        className={`p-4 mt-4 cursor-pointer transition-all duration-300 ${selectedCard === "training"
                            ? "border-purple-500 border-l-4 border-l-purple-700 shadow-md"
                            : "border-gray-300 dark:border-gray-700"
                            }`}
                        onClick={() => setSelectedCard("training")}
                    >
                        <CardContent>
                            <h3 className="font-semibold">ƒê√†o t·∫°o th·ª±c h√†nh</h3>
                            <p>N√¢ng cao k·ªπ nƒÉng m·ªôt c√°ch hi·ªáu qu·∫£ v·ªõi c√°c b√†i t·∫≠p coding, b√†i ki·ªÉm tra th·ª±c h√†nh, tr·∫Øc nghi·ªám v√† workspace ƒë∆∞·ª£c h·ªó tr·ª£ b·ªüi AI.</p>
                        </CardContent>
                    </Card>

                    {/** üü£ Card 2 - Luy·ªán thi ch·ª©ng ch·ªâ */}
                    <Card
                        className={`p-4 mt-4 cursor-pointer transition-all duration-300 ${selectedCard === "certification"
                            ? "border-purple-500 border-l-4 border-l-purple-700 shadow-md"
                            : "border-gray-300 dark:border-gray-700"
                            }`}
                        onClick={() => setSelectedCard("certification")}
                    >
                        <CardContent>
                            <h3 className="font-semibold">Luy·ªán thi ch·ª©ng ch·ªâ</h3>
                            <p>Luy·ªán thi c√°c ch·ª©ng ch·ªâ ƒë∆∞·ª£c c√¥ng nh·∫≠n trong ng√†nh b·∫±ng c√°ch gi·∫£i quy·∫øt c√°c th√°ch th·ª©c th·ª±c t·∫ø.</p>
                            <Button variant="link" className="text-purple-600">Explore courses ‚Üí</Button>
                        </CardContent>
                    </Card>

                    {/** üü£ Card 3 - Khoa h·ªçc d·ªØ li·ªáu */}
                    <Card
                        className={`p-4 mt-4 cursor-pointer transition-all duration-300 ${selectedCard === "analytics"
                            ? "border-purple-500 border-l-4 border-l-purple-700 shadow-md"
                            : "border-gray-300 dark:border-gray-700"
                            }`}
                        onClick={() => setSelectedCard("analytics")}
                    >
                        <CardContent>
                            <h3 className="font-semibold">Nh·ªØng hi·ªÉu bi·∫øt v√† khoa h·ªçc ph√¢n t√≠ch d·ªØ li·ªáu</h3>
                            <p>Theo d√µi nhanh c√°c m·ª•c ti√™u b·∫±ng nh·ªØng hi·ªÉu bi·∫øt s√¢u s·∫Øc gi√∫p th√∫c ƒë·∫©y qu√° tr√¨nh h·ªçc t·∫≠p hi·ªáu qu·∫£.</p>
                            <Button variant="link" className="text-purple-600">Explore courses ‚Üí</Button>
                        </CardContent>
                    </Card>

                    {/** üü£ Card 4 - N·ªôi dung t√πy ch·ªânh */}
                    <Card
                        className={`p-4 mt-4 cursor-pointer transition-all duration-300 ${selectedCard === "customContent"
                            ? "border-purple-500 border-l-4 border-l-purple-700 shadow-md"
                            : "border-gray-300 dark:border-gray-700"
                            }`}
                        onClick={() => setSelectedCard("customContent")}
                    >
                        <CardContent>
                            <h3 className="font-semibold">N·ªôi dung c√≥ th·ªÉ t√πy ch·ªânh</h3>
                            <p>T·∫°o l·ªô tr√¨nh h·ªçc t·∫≠p ph√π h·ª£p cho c√°c m·ª•c ti√™u c·ªßa nh√≥m v√† t·ªï ch·ª©c.</p>
                            <Button variant="link" className="text-purple-600">Explore courses ‚Üí</Button>
                        </CardContent>
                    </Card>
                </div>

                {/** üìå Hi·ªÉn th·ªã h√¨nh ·∫£nh t∆∞∆°ng ·ª©ng */}
                <div className="bg-gray-100 dark:bg-gray-800 rounded-xl p-6 flex justify-center items-center">
                    <img
                        src={images[selectedCard]}
                        alt="Selected Tab Image"
                        className="w-full max-w-md rounded-lg shadow-lg transition-all duration-300"
                    />
                </div>
            </section>

            {/* Section 2: Testimonials */}
            <section className="max-w-8xl bg-gray-50 dark:bg-gray-800 py-12">
                <div className="max-w-7xl mx-auto px-6 md:px-12 text-center">
                    <h2 className="text-3xl font-bold text-gray-900 dark:text-gray-100 mb-8">
                        Xem nh·ªØng ng∆∞·ªùi kh√°c ƒëang ƒë·∫°t ƒë∆∞·ª£c g√¨ th√¥ng qua h·ªçc t·∫≠p
                    </h2>
                    <div className="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-4 gap-6">
                        {testimonials.map((item, index) => (
                            <Card key={index} className="shadow-md border dark:border-gray-700 hover:shadow-lg transition-all">
                                <CardContent className="flex flex-col gap-4 p-6">
                                    <p className="italic text-gray-700 dark:text-gray-300">‚Äú{item.quote}‚Äù</p>
                                    <div className="flex items-center gap-3">
                                        {item.image ? (
                                            <img src={item.image} alt={item.author} className="w-12 h-12 rounded-full" />
                                        ) : (
                                            <img src={item.logo} alt="logo" className="w-16" />
                                        )}
                                        <div className="text-left">
                                            <p className="font-semibold">{item.author}</p>
                                            <p className="text-sm text-gray-500 dark:text-gray-400">{item.details}</p>
                                        </div>
                                    </div>
                                    <a href="#" className="text-purple-600 font-medium hover:underline">{item.link}</a>
                                </CardContent>
                            </Card>
                        ))}
                    </div>
                </div>
            </section>
        </div>
    );
};

export default LearningUI;
